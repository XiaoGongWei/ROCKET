//============================================================================
//
//  This file is part of GPSTk, the GPS Toolkit.
//
//  The GPSTk is free software; you can redistribute it and/or modify
//  it under the terms of the GNU Lesser General Public License as published
//  by the Free Software Foundation; either version 3.0 of the License, or
//  any later version.
//
//  The GPSTk is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with GPSTk; if not, write to the Free Software Foundation,
//  Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110, USA
//
//  Copyright 2004, The University of Texas at Austin
//  Kaifa Kuang - Wuhan University . 2016
//
//============================================================================

//============================================================================
//
//This software developed by Applied Research Laboratories at the University of
//Texas at Austin, under contract to an agency or agencies within the U.S.
//Department of Defense. The U.S. Government retains all rights to use,
//duplicate, distribute, disclose, or release this software.
//
//Pursuant to DoD Directive 523024
//
// DISTRIBUTION STATEMENT A: This software has been approved for public
//                           release, distribution is unlimited.
//
//=============================================================================

/**
 * @file GNSSOrbit.cpp
 * This Class handles GNSS orbit.
 */

#include "GNSSOrbit.hpp"

using namespace std;

namespace gpstk
{
   // get derivative dy/dt
   Vector<double> GNSSOrbit::getDerivatives(const double&         t,
                                            const Vector<double>& y)
   {
      // current epoch
      CommonTime utc(utc0 + t);

      // current state
      sc.setStateVector(y);

      // current acceleration and partial derivatives
      pEGM->doCompute(utc,eb,sc);
      pSun->doCompute(utc,eb,sc);
      pMoon->doCompute(utc,eb,sc);
      pSRP->doCompute(utc,eb,sc);
      pRel->doCompute(utc,eb,sc);
/*
      cout << "EGM:  " << pEGM->getAcceleration() << endl;
      cout << "Sun:  " << pSun->getAcceleration() << endl;
      cout << "Moon: " << pMoon->getAcceleration() << endl;
      cout << "SRP:  " << pSRP->getAcceleration() << endl;
      cout << "Rel:  " << pRel->getAcceleration() << endl;
*/
      // a
      Vector<double> a(3,0.0);
      a = pEGM->getAcceleration()
        + pSun->getAcceleration()
        + pMoon->getAcceleration()
        + pSRP->getAcceleration()
        + pRel->getAcceleration();

       // v
       Vector<double> v( sc.getVelocity() );

       /* Dot of current state
        */

       int np = sc.getNumOfParam();

       Vector<double> dy(42+6*np,0.0);

       // v
       dy(0) = v(0); dy(1) = v(1); dy(2) = v(2);

       // a
       dy(3) = a(0); dy(4) = a(1); dy(5) = a(2);

       return dy;
   }

}  // End of namespace 'gpstk'
